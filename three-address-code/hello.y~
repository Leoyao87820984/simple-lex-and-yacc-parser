%{
#include <stdio.h>
#define YYSTYPE char *
extern FILE *yyin;
extern YYSTYPE yylval;
extern int lineNum;
int total_error=0;
int ErrorRecovered = 0;

%}


%union{
  double      value;
  char        *string;
}

%start Start
%type <value> NUM 
%type <string> ID 
%token ID NUM RELOP ADDOP MULOP ASSIGN NOT SQRBO SQRBC STRBO STRBC END NEWLINE

%% 				
		
Start			: Stmt_list 
				| error  END {yyerrok;}
				;			
				
Stmt_list 		: Stmt {yyerror("an extra expression"); }
				| Stmt_list END Stmt  {yyerror("missing expression"); }
				;

Stmt	  		: Variable ASSIGN Expression 
				;

Variable  		: ID 
				| ID SQRBO Expression SQRBC 
				;

Expression		: Simple_expression {}
				| Simple_expression RELOP Simple_expression  {}
				;

Simple_expression	: Term {}
				| Simple_expression ADDOP Term {}
				;

Term			: Factor {}
				| Term MULOP Factor 
				; 

Factor			: ID {printf("%s\n", $1->string);}
				| NUM 
				| STRBO Expression STRBC {} 
				| ID SQRBO Expression SQRBC 
				| NOT Factor 
				; 				

%%

int yywrap()
{
	
        return 1;
} 
  
int main()
{
    yyin=fopen("input.txt","r");
    yyparse();
    fclose(yyin);
    return 0;
}


int yyerror(char *str)
{
				if(ErrorRecovered==0)
					{
					printf("Error Found @ line #%d: %s", lineNum+1, str);
					printf("\n");
					ErrorRecovered = 1;
					}
		        
}
 

